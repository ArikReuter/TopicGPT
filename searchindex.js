Search.setIndex({"docnames": ["index", "modules", "topicgpt"], "filenames": ["index.rst", "modules.rst", "topicgpt.rst"], "titles": ["Welcome to topicgpt\u2019s documentation!", "topicgpt", "topicgpt package"], "terms": {"packag": [0, 1], "submodul": [0, 1], "cluster": [0, 1], "modul": [0, 1], "extracttopword": [0, 1], "getembeddingsopenai": [0, 1], "metric": [], "topicprompt": [0, 1], "topicrepresent": [0, 1], "topwordenhanc": [0, 1], "index": [0, 2], "search": [0, 2], "page": 0, "clustering_and_dimr": [1, 2], "cluster_and_reduc": [1, 2], "cluster_hdbscan": [1, 2], "reduce_dimensions_umap": [1, 2], "umap_diagnost": [1, 2], "visualize_clusters_dynam": [1, 2], "visualize_clusters_stat": [1, 2], "compute_bow_represent": [1, 2], "compute_centroid_similar": [1, 2], "compute_corpus_vocab": [1, 2], "compute_embedding_similarity_centroid": [1, 2], "compute_word_topic_mat": [1, 2], "compute_word_topic_mat_old": [1, 2], "compute_words_top": [1, 2], "embed_vocab_openai": [1, 2], "extract_centroid": [1, 2], "extract_topwords_centroid_similar": [1, 2], "extract_topwords_tfidf": [1, 2], "get_most_similar_doc": [1, 2], "compute_number_of_token": [1, 2], "convert_api_res_list": [1, 2], "get_embed": [1, 2], "get_embeddings_doc_split": [1, 2], "make_api_cal": [1, 2], "num_tokens_from_str": [1, 2], "split_doc": [1, 2], "split_long_doc": [1, 2], "compute_embed": [1, 2], "describe_top": [1, 2], "extract_top": [1, 2], "fit": [1, 2], "pprompt": [1, 2], "print_top": [1, 2], "prompt": [0, 1, 2], "repr_top": [1, 2], "save_embed": [1, 2], "visualize_clust": [1, 2], "add_new_topic_keyword": [1, 2], "combine_top": [1, 2], "delete_top": [1, 2], "general_prompt": [1, 2], "get_topic_inform": [1, 2], "get_topic_li": [1, 2], "identify_topic_idx": [1, 2], "knn_search": [1, 2], "prompt_knn_search": [1, 2], "reindex_topic_li": [1, 2], "reindex_top": [1, 2], "set_topic_li": [1, 2], "show_topic_list": [], "split_topic_hdbscan": [1, 2], "split_topic_keyword": [1, 2], "split_topic_kmean": [1, 2], "split_topic_new_assign": [1, 2], "split_topic_single_keyword": [1, 2], "topic": [0, 1, 2], "set_topic_descript": [1, 2], "set_topic_nam": [1, 2], "to_dict": [1, 2], "to_json": [1, 2], "describe_and_name_top": [1, 2], "extract_and_describe_topic_cos_sim": [1, 2], "extract_and_describe_top": [1, 2], "extract_describe_topics_labels_vocab": [1, 2], "extract_topic_cos_sim": [1, 2], "extract_topics_labels_vocab": [1, 2], "extract_topics_no_new_vocab_comput": [1, 2], "topic_lis_to_json": [1, 2], "topic_to_json": [1, 2], "count_tokens_api_messag": [1, 2], "describe_topic_document_sampling_str": [1, 2], "describe_topic_documents_completion_object": [1, 2], "describe_topic_documents_sampling_completion_object": [1, 2], "describe_topic_topwords_completion_object": [1, 2], "describe_topic_topwords_str": [1, 2], "generate_topic_name_str": [1, 2], "sample_ident": [1, 2], "sample_poisson": [1, 2], "sample_uniform": [1, 2], "content": 1, "class": 2, "n_dims_umap": 2, "int": 2, "5": [0, 2], "n_neighbors_umap": 2, "15": 2, "min_dist_umap": 2, "float": 2, "0": 2, "metric_umap": 2, "str": 2, "cosin": 2, "min_cluster_size_hdbscan": 2, "30": 2, "metric_hdbscan": 2, "euclidean": 2, "cluster_selection_method_hdbscan": 2, "eom": 2, "number_clusters_hdbscan": 2, "none": 2, "random_st": 2, "42": 2, "verbos": 2, "bool": 2, "true": 2, "umap_hyperparam": 2, "dict": 2, "hdbscan_hyperparam": 2, "base": [0, 2], "object": 2, "perform": 2, "dimension": 2, "reduct": 2, "umap": 2, "follow": [0, 2], "hdbscan": 2, "embed": [0, 2], "ndarrai": 2, "tupl": 2, "reduc": 2, "dimens": 2, "np": 2, "return": 2, "label": 2, "mapper": 2, "transform": 2, "new": [0, 2], "especi": 2, "vocabulari": 2, "make": 2, "sure": 2, "TO": 2, "normal": 2, "after": 2, "us": [0, 2], "THE": 2, "If": 2, "self": 2, "i": [0, 2], "further": [0, 2], "data": 2, "agglomerativeclust": 2, "achiev": 2, "fix": 2, "number": 2, "hammer_edg": 2, "fals": 2, "provid": [0, 2], "gener": [0, 2], "diagnost": 2, "plot": 2, "arrai": 2, "like": 2, "The": 2, "high": 2, "visual": 2, "default": 2, "computation": 2, "expens": 2, "text": [0, 2], "list": [0, 2], "class_nam": 2, "plotli": 2, "allow": 2, "hover": 2, "over": 2, "see": 2, "begin": 2, "document": 2, "whose": [], "name": 2, "two": 2, "vocab": 2, "vocab_set": 2, "set": 2, "comput": 2, "bag": 2, "word": [0, 2], "represent": [0, 2], "corpu": 2, "sort": 2, "alphabet": 2, "centroid_dict": 2, "cluster_label": 2, "similar": 2, "centroid": 2, "via": [0, 2], "dictionari": 2, "which": [0, 2], "remove_stopword": 2, "remove_punct": 2, "min_word_length": 2, "3": [0, 2], "max_word_length": 2, "20": 2, "remove_short_word": 2, "remove_numb": 2, "min_doc_frequ": 2, "min_freq": 2, "1": 2, "max_freq": 2, "9": 2, "preprocess": 2, "whether": 2, "remov": 2, "stopword": 2, "punctuat": 2, "remove_long_word": [], "long": [], "short": 2, "print": 2, "progress": 2, "sai": 2, "what": 2, "happen": 2, "minimum": 2, "should": 2, "appear": 2, "consid": 2, "frequenc": 2, "percentil": 2, "maximum": 2, "vocab_embedding_dict": 2, "umap_mapp": 2, "reduce_vocab_embed": 2, "reduce_centroid_embed": 2, "each": 2, "same": 2, "wai": [0, 2], "mean": 2, "outlier": 2, "ha": 2, "shape": 2, "len": 2, "consider_outli": 2, "matrix": 2, "more": [0, 2], "effici": 2, "when": 2, "top": [0, 2], "e": 2, "contain": 2, "indic": 2, "per": 2, "api_kei": 2, "embedd": 2, "emb": 2, "openai": 2, "api": 2, "kei": 2, "extract": [0, 2], "singl": 2, "word_topic_mat": 2, "numpi": 2, "umap_": 2, "top_n_word": 2, "10": 2, "occur": 2, "whetther": [], "tf": 2, "idf": 2, "score": 2, "top_n": 2, "get": 2, "most": 2, "embedding_model": 2, "ada": 2, "002": 2, "token": 2, "max_token": 2, "8191": 2, "thi": 2, "function": [0, 2], "total": 2, "need": 2, "string": 2, "where": 2, "element": 2, "api_res_list": 2, "convert": 2, "api_r": 2, "error": 2, "dure": 2, "process": 2, "n_tri": 2, "split": [0, 2], "repres": 2, "its": 2, "chunk": 2, "tri": 2, "an": [0, 2], "call": [0, 2], "respons": 2, "static": 2, "encod": 2, "longer": 2, "than": 2, "smaller": 2, "compris": 2, "all": 2, "ar": 2, "openai_api_kei": 2, "n_topic": 2, "openai_prompting_model": 2, "gpt": [0, 2], "turbo": 2, "16k": 2, "max_number_of_token": 2, "16384": 2, "corpus_instruct": 2, "document_embed": 2, "vocab_embed": 2, "max_numer_of_tokens_embed": [], "use_saved_embed": 2, "n_topword": 2, "2000": 2, "n_topwords_descript": 2, "500": 2, "topword_extraction_method": 2, "tfidf": 2, "cosine_similar": 2, "compute_vocab_hyperparam": 2, "enhanc": 2, "topic_prompt": 2, "main": 2, "do": 2, "model": [0, 2], "n_embedding_dimens": 2, "given": 2, "valu": 2, "give": 2, "describ": 2, "them": 2, "from": 2, "necessari": 2, "queri": 2, "return_function_result": 2, "answer": 2, "result": 2, "llm": [0, 2], "function_result": 2, "explain": [], "pleas": [0, 2], "have": [], "look": [], "detail": [0, 2], "avail": 2, "path": 2, "savedembed": 2, "pkl": 2, "save": 2, "pickl": 2, "file": 2, "For": 0, "later": 2, "re": 2, "identifi": [0, 2], "constitut": [], "scatterplot": 2, "topic_li": 2, "openai_kei": 2, "max_context_length_promt": 2, "16000": 2, "openai_model_temperature_prompt": 2, "openai_embedding_model": 2, "max_context_length_embed": 2, "basic_model_instruct": 2, "you": 2, "help": 2, "assist": 2, "nyou": 2, "excel": 2, "infer": 2, "inform": [0, 2], "about": [0, 2], "discov": 2, "retriev": [0, 2], "summar": 2, "intellig": 2, "applic": 2, "everyth": 2, "output": 2, "strictli": 2, "cite": 2, "alwai": 2, "explicitli": [0, 2], "don": 2, "t": 2, "find": 2, "ani": 2, "onli": 2, "someth": 2, "veri": 2, "formul": 2, "against": 2, "keyword": [0, 2], "inplac": 2, "rename_new_top": 2, "creat": 2, "belong": 2, "other": 2, "add": 2, "note": 2, "recomput": 2, "entir": 2, "doe": 2, "automat": [], "reflect": [], "necessarili": [], "method": 2, "actual": [], "complet": [], "topword": 2, "both": 2, "map": 2, "fro": [], "otherwis": 2, "renam": 2, "includ": 2, "newli": 2, "modifi": [0, 2], "old": 2, "ones": 2, "topic_idx_li": 2, "combin": [0, 2], "sever": 2, "one": 2, "step": 2, "just": 2, "also": 2, "topic_idx": 2, "delet": [0, 2], "assign": 2, "remain": 2, "2": 2, "defin": 2, "case": 2, "valid": 2, "messag": 2, "max_number_topword": 2, "can": [0, 2], "compar": 2, "simpli": 0, "descript": [0, 2], "comparison": 0, "done": [], "ask": [], "best": 2, "topic_index": 2, "k": 2, "doc_cutoff_threshold": 2, "1000": 2, "nearest": 2, "neighbor": 2, "origin": 2, "space": 2, "afterward": 2, "cut": 2, "off": 2, "topk_doc": [], "topk_doc_indic": [], "llm_queri": 2, "json": 2, "c": [], "user": [], "arik_": [], "anaconda3": [], "env": [], "llm_sem": [], "lib": [], "__init__": [], "py": [], "correct": 2, "show": [], "min_cluster_s": 2, "100": 2, "exist": 2, "subtop": 2, "requir": 2, "specifi": 2, "among": 2, "size": 2, "accord": 2, "between": 2, "least": 2, "n_cluster": 2, "kmean": [], "new_topic_assign": 2, "becaus": 2, "No": 2, "closer": 2, "stai": 2, "while": [0, 2], "move": 2, "centroid_hd": 2, "centroid_ld": 2, "document_embeddings_hd": 2, "document_embeddings_ld": 2, "document_embedding_similar": 2, "top_word": 2, "top_word_scor": 2, "attribut": 2, "topword_method": 2, "n_word": 2, "ad": 2, "documents_top": 2, "document_embeddings_top": 2, "words_top": 2, "low": 2, "topword_description_method": 2, "hyperparamet": 2, "alreadi": 2, "work": [], "instead": 2, "openai_model": 2, "max_context_length": 2, "4000": 2, "openai_model_temperatur": 2, "count": 2, "truncate_doc_thresh": 2, "n_document": 2, "query_funct": 2, "type": 2, "callabl": 2, "lambda": 2, "sampling_strategi": 2, "take": 2, "sampl": 2, "subset": [], "order": 2, "threshold": 2, "prune": 2, "strategi": 2, "first": 2, "interpret": 2, "g": 2, "A": 2, "form": 2, "chatcomplet": 2, "togeth": [], "analog": [], "n_doc": 2, "chang": 2, "arang": [], "randomli": 2, "poisson": 2, "distribut": 2, "draw": [], "random": [], "permut": 2, "max_number_of_tokens_embed": 2, "paramet": 2, "item": 2, "option": 2, "languag": 2, "explan": 2, "refer": 2, "embeddings_path": 2, "remove_punctu": [], "length": 2, "retain": 2, "param": [], "instanc": 2, "outer": 2, "": 2, "exce": 2, "truncat": 2, "union": 2, "It": [0, 2], "custom": 2, "ident": 2, "without": [0, 2], "favor": 2, "drawn": 2, "replac": 2, "get_topic_list": [], "reindex_topic_list": [], "set_topic_list": [], "three": 2, "reduced_embed": 2, "enabl": 2, "updat": 2, "place": 2, "topic_idx_list": 2, "addition": 2, "invok": 2, "store": 2, "associ": 2, "determin": 2, "suitabl": 2, "found": 2, "within": [0, 2], "correspond": 2, "topic_list": 2, "reindex": 2, "ensur": 2, "thei": 2, "correctli": 2, "human": 2, "readabl": 2, "version": 2, "integr": 0, "remark": 0, "capabl": 0, "current": 0, "4": 0, "tradit": 0, "simpl": 0, "lion": 0, "leopard": 0, "rhino": 0, "eleph": 0, "buffalo": 0, "offer": 0, "rich": 0, "dynam": 0, "intuit": 0, "understood": 0, "extens": 0, "investig": 0, "variou": 0, "command": 0, "specif": 0, "core": 0, "identif": 0, "augment": 0, "rag": 0, "addit": 0, "possibl": 0, "directli": 0, "interact": 0, "autonom": 0, "decid": 0, "instal": [], "pypi": 0, "http": 0, "org": [], "project": [], "pip": 0, "exampl": 0, "demonstr": [], "how": [], "real": [], "world": [], "dataset": [], "twenti": [], "newsgroup": [], "scikit": [], "learn": [], "19": [], "twenty_newsgroup": [], "html": [], "purpos": [], "load": [], "python": [], "sklearn": [], "import": [], "fetch_20newsgroup": [], "header": [], "footer": [], "quot": [], "download": [], "doc": [], "empti": [], "initi": [], "execut": [], "platform": [], "com": 0, "account": [], "we": [], "select": [], "sinc": [], "differ": [], "let": [], "tm": [], "your": [], "depend": [], "wether": [], "been": [], "few": [], "minut": [], "hour": [], "some": [], "time": [], "argument": [], "inspect": [], "obtain": [], "overview": [], "indentifi": [], "_output_": [], "electron": [], "equip": [], "sale": [], "imag": [], "gun": [], "control": [], "onlin": [], "privaci": [], "anonym": [], "conflict": [], "violenc": [], "hardwar": [], "6": [], "belief": [], "atheism": [], "7": [], "discuss": [], "8": [], "softwar": [], "car": [], "featur": [], "encrypt": [], "govern": [], "11": [], "technologi": [], "12": [], "13": [], "explor": [], "14": [], "motorcycl": [], "ride": [], "techniqu": [], "16": [], "hockei": [], "game": [], "17": [], "health": [], "medicin": [], "18": [], "basebal": [], "team": [], "homosexu": [], "To": 0, "topic_descript": [], "common": [], "aspect": [], "sub": [], "bui": [], "sell": [], "price": [], "devic": [], "usag": 0, "condit": [], "technic": [], "wire": [], "ground": [], "power": [], "circuit": [], "voltag": [], "commun": [], "connect": [], "phone": [], "email": [], "modem": [], "wireless": [], "accessori": [], "peripher": [], "batteri": [], "cabl": [], "manual": [], "disk": [], "monitor": [], "n": [], "would": [], "out": [], "might": [], "interest": [], "know": [], "moon": [], "land": [], "relat": [], "want": [], "5n": [], "258": [], "introduct": [], "solar": [], "system": [], "mention": [], "advanc": [], "rocketri": [], "war": [], "ii": [], "machin": [], "travel": [], "planet": [], "highlight": [], "unit": [], "state": [], "sent": [], "autom": [], "spacecraft": [], "crew": [], "expedit": [], "535": [], "65": [], "million": [], "program": [], "back": [], "bill": [], "aim": [], "encourag": [], "privat": [], "compani": [], "develop": [], "lunar": [], "orbit": [], "chanc": [], "mission": [], "decad": [], "through": [], "357": [], "request": [], "recent": [], "newspap": [], "articl": [], "japanes": [], "crash": [], "wa": [], "vagu": [], "unclear": [], "321": [], "specul": [], "soviet": [], "had": [], "beaten": [], "race": [], "suggest": [], "u": [], "still": [], "potenti": [], "up": [], "focu": [], "mar": [], "action": [], "102": [], "hiten": [], "engin": [], "test": 0, "spent": [], "highli": [], "eccentr": [], "earth": [], "flybi": [], "befor": [], "being": [], "insert": [], "graviti": [], "maneuv": [], "expect": [], "eventu": [], "abov": [], "summari": [], "mai": [], "captur": [], "inde": [], "relev": [], "accordingli": [], "check": [], "Their": [], "tricki": [], "meant": [], "thing": [], "stabl": [], "far": [], "anyon": [], "believ": [], "recal": [], "hear": [], "bit": [], "thu": [], "here": [], "five": [], "god": [], "evid": [], "proof": [], "v": [], "theism": [], "delv": [], "concept": [], "atheist": [], "theist": [], "debat": [], "surround": [], "faith": [], "focus": [], "role": [], "plai": [], "religi": [], "philosoph": [], "context": [], "ration": [], "reason": [], "involv": [], "logic": [], "religion": [], "moral": [], "ethic": [], "influenc": [], "These": [], "were": [], "those": [], "rather": [], "One": [], "philosophi": [], "so": [], "tell": [], "21": [], "encompass": [], "theme": [], "truth": [], "practic": [], "prai": [], "heret": [], "bibl": [], "church": [], "christian": [], "muslim": [], "understand": [], "good": [], "wrong": [], "punish": [], "22": [], "question": [], "challeng": [], "scienc": [], "reli": [], "23": [], "revolv": [], "around": [], "fallaci": [], "premis": [], "principl": [], "right": [], "immor": [], "judgment": [], "behavior": [], "sexual": [], "promiscu": [], "sex": [], "scientif": [], "perspect": [], "empir": [], "studi": [], "cover": [], "intend": [], "howev": [], "got": [], "slightli": [], "optim": [], "sport": [], "truen": [], "player": [], "season": [], "skill": [], "fan": [], "audienc": [], "statist": [], "record": [], "playoff": [], "better": [], "win": [], "hit": [], "seri": [], "watch": [], "stat": [], "pt": [], "career": [], "tip": [], "trick": [], "behav": [], "allevi": [], "issu": [], "sometim": [], "cannot": [], "except": [], "algorithm": [], "again": [], "stochast": [], "yield": [], "doesn": [], "In": [], "could": [], "hallucin": [], "fact": [], "central": [], "built": [], "mechan": [], "section": [], "idea": [], "curs": [], "difficult": [], "imposs": [], "agglom": [], "frequent": [], "rare": [], "highest": [], "closest": [], "heurist": [], "introduc": [], "bertop": [], "grootendorst": [], "maarten": [], "neural": [], "procedur": 0, "arxiv": [], "preprint": [], "2203": [], "05794": [], "2022": [], "top2vec": [], "angelov": [], "dimo": [], "2008": [], "09470": [], "2020": [], "next": [], "direct": [], "textual": [], "basic": [], "desir": [], "Then": [], "respect": [], "part": [], "certain": [], "super": [], "limit": [], "caveat": [], "inher": [], "shortcom": [], "well": [], "go": [], "known": [], "incorrect": [], "coher": [], "plausibl": [], "seem": [], "convinc": [], "made": [], "although": [], "minim": [], "undesir": [], "carefulli": [], "design": [], "distort": [], "misinterpret": [], "knn": [], "incorrectli": [], "unsdesir": [], "behaviour": [], "yourself": [], "stoachast": [], "determinist": [], "exhibit": [], "There": [], "probabl": [], "try": [], "compon": [], "mostli": [], "On": [], "hand": [], "overli": [], "cautiou": [], "report": [], "match": [], "even": [], "though": [], "caus": [], "prevent": [], "massiv": [], "occurr": [], "posit": [], "significantli": [], "erron": [], "semant": [], "grammat": [], "orthograph": [], "uniform": [], "manifold": [], "approxim": [], "mcinn": [], "leland": [], "john": [], "heali": [], "jame": [], "melvil": [], "1802": [], "03426": [], "2018": [], "hierarch": [], "densiti": [], "steve": [], "astel": [], "j": [], "open": [], "sourc": 0, "softw": [], "2017": [], "205": [], "exe": [], "pedregosa": [], "fabian": [], "et": [], "al": [], "journal": [], "research": [], "2011": [], "2825": [], "2830": [], "famili": [], "brown": [], "tom": [], "b": [], "shot": [], "learner": [], "33": [], "radford": [], "alec": [], "pre": [], "train": [], "discret": [], "latent": [], "variabl": [], "2302": [], "07413": [], "2023": [], "improv": [], "url": [], "s3": [], "west": [], "amazonaw": [], "asset": [], "unsupervis": [], "language_understanding_pap": [], "pdf": [], "multitask": [], "blog": [], "2019": [], "compare_top": [], "add_keyword": [], "themselv": [], "creation": [], "split_topic_random": [], "manag": [], "ab": [], "code": 0, "visit": 0, "offici": [], "lmu": 0, "seminar": 0, "show_topic_li": [1, 2]}, "objects": {"": [[2, 0, 0, "-", "topicgpt"]], "topicgpt": [[2, 0, 0, "-", "Clustering"], [2, 0, 0, "-", "ExtractTopWords"], [2, 0, 0, "-", "GetEmbeddingsOpenAI"], [2, 0, 0, "-", "TopicGPT"], [2, 0, 0, "-", "TopicPrompting"], [2, 0, 0, "-", "TopicRepresentation"], [2, 0, 0, "-", "TopwordEnhancement"]], "topicgpt.Clustering": [[2, 1, 1, "", "Clustering_and_DimRed"]], "topicgpt.Clustering.Clustering_and_DimRed": [[2, 2, 1, "", "cluster_and_reduce"], [2, 2, 1, "", "cluster_hdbscan"], [2, 2, 1, "", "reduce_dimensions_umap"], [2, 2, 1, "", "umap_diagnostics"], [2, 2, 1, "", "visualize_clusters_dynamic"], [2, 2, 1, "", "visualize_clusters_static"]], "topicgpt.ExtractTopWords": [[2, 1, 1, "", "ExtractTopWords"]], "topicgpt.ExtractTopWords.ExtractTopWords": [[2, 2, 1, "", "compute_bow_representation"], [2, 2, 1, "", "compute_centroid_similarity"], [2, 2, 1, "", "compute_corpus_vocab"], [2, 2, 1, "", "compute_embedding_similarity_centroids"], [2, 2, 1, "", "compute_word_topic_mat"], [2, 2, 1, "", "compute_word_topic_mat_old"], [2, 2, 1, "", "compute_words_topics"], [2, 2, 1, "", "embed_vocab_openAI"], [2, 2, 1, "", "extract_centroid"], [2, 2, 1, "", "extract_centroids"], [2, 2, 1, "", "extract_topwords_centroid_similarity"], [2, 2, 1, "", "extract_topwords_tfidf"], [2, 2, 1, "", "get_most_similar_docs"]], "topicgpt.GetEmbeddingsOpenAI": [[2, 1, 1, "", "GetEmbeddingsOpenAI"]], "topicgpt.GetEmbeddingsOpenAI.GetEmbeddingsOpenAI": [[2, 2, 1, "", "compute_number_of_tokens"], [2, 2, 1, "", "convert_api_res_list"], [2, 2, 1, "", "get_embeddings"], [2, 2, 1, "", "get_embeddings_doc_split"], [2, 2, 1, "", "make_api_call"], [2, 2, 1, "", "num_tokens_from_string"], [2, 2, 1, "", "split_doc"], [2, 2, 1, "", "split_long_docs"]], "topicgpt.TopicGPT": [[2, 1, 1, "", "TopicGPT"]], "topicgpt.TopicGPT.TopicGPT": [[2, 2, 1, "", "compute_embeddings"], [2, 2, 1, "", "describe_topics"], [2, 2, 1, "", "extract_topics"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "pprompt"], [2, 2, 1, "", "print_topics"], [2, 2, 1, "", "prompt"], [2, 2, 1, "", "repr_topics"], [2, 2, 1, "", "save_embeddings"], [2, 2, 1, "", "visualize_clusters"]], "topicgpt.TopicPrompting": [[2, 1, 1, "", "TopicPrompting"]], "topicgpt.TopicPrompting.TopicPrompting": [[2, 2, 1, "", "add_new_topic_keyword"], [2, 2, 1, "", "combine_topics"], [2, 2, 1, "", "delete_topic"], [2, 2, 1, "", "general_prompt"], [2, 2, 1, "", "get_topic_information"], [2, 2, 1, "", "get_topic_lis"], [2, 2, 1, "", "identify_topic_idx"], [2, 2, 1, "", "knn_search"], [2, 2, 1, "", "prompt_knn_search"], [2, 2, 1, "", "reindex_topic_lis"], [2, 2, 1, "", "reindex_topics"], [2, 2, 1, "", "set_topic_lis"], [2, 2, 1, "", "show_topic_lis"], [2, 2, 1, "", "split_topic_hdbscan"], [2, 2, 1, "", "split_topic_keywords"], [2, 2, 1, "", "split_topic_kmeans"], [2, 2, 1, "", "split_topic_new_assignments"], [2, 2, 1, "", "split_topic_single_keyword"]], "topicgpt.TopicRepresentation": [[2, 1, 1, "", "Topic"], [2, 3, 1, "", "describe_and_name_topics"], [2, 3, 1, "", "extract_and_describe_topic_cos_sim"], [2, 3, 1, "", "extract_and_describe_topics"], [2, 3, 1, "", "extract_describe_topics_labels_vocab"], [2, 3, 1, "", "extract_topic_cos_sim"], [2, 3, 1, "", "extract_topics"], [2, 3, 1, "", "extract_topics_labels_vocab"], [2, 3, 1, "", "extract_topics_no_new_vocab_computation"], [2, 3, 1, "", "topic_lis_to_json"], [2, 3, 1, "", "topic_to_json"]], "topicgpt.TopicRepresentation.Topic": [[2, 2, 1, "", "set_topic_description"], [2, 2, 1, "", "set_topic_name"], [2, 2, 1, "", "to_dict"], [2, 2, 1, "", "to_json"]], "topicgpt.TopwordEnhancement": [[2, 1, 1, "", "TopwordEnhancement"]], "topicgpt.TopwordEnhancement.TopwordEnhancement": [[2, 2, 1, "", "count_tokens_api_message"], [2, 2, 1, "", "describe_topic_document_sampling_str"], [2, 2, 1, "", "describe_topic_documents_completion_object"], [2, 2, 1, "", "describe_topic_documents_sampling_completion_object"], [2, 2, 1, "", "describe_topic_topwords_completion_object"], [2, 2, 1, "", "describe_topic_topwords_str"], [2, 2, 1, "", "generate_topic_name_str"], [2, 2, 1, "", "sample_identity"], [2, 2, 1, "", "sample_poisson"], [2, 2, 1, "", "sample_uniform"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "topicgpt": [0, 1, 2], "": 0, "document": 0, "content": [0, 2], "indic": 0, "tabl": 0, "packag": 2, "submodul": 2, "cluster": 2, "modul": 2, "param": 2, "extracttopword": 2, "getembeddingsopenai": 2, "metric": [], "topicprompt": 2, "topicrepresent": 2, "topwordenhanc": 2, "instal": 0, "exampl": [], "load": [], "data": [], "initi": [], "model": [], "fit": [], "inspect": [], "found": [], "topic": [], "find": [], "out": [], "more": [], "detail": [], "inform": [], "about": [], "identifi": [], "split": [], "combin": [], "tip": [], "trick": [], "prompt": [], "how": [], "work": [], "embed": [], "extract": [], "top": [], "word": [], "describ": [], "name": [], "refer": [], "guid": 0, "github": 0, "repositori": 0}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Welcome to topicgpt\u2019s documentation!": [[0, "welcome-to-topicgpt-s-documentation"]], "TopicGPT": [[0, "topicgpt"]], "Installation Guide": [[0, "installation-guide"]], "GitHub Repository": [[0, "github-repository"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "topicgpt": [[1, "topicgpt"]], "topicgpt package": [[2, "topicgpt-package"]], "Submodules": [[2, "submodules"]], "topicgpt.Clustering module": [[2, "module-topicgpt.Clustering"]], "Params:": [[2, "params"]], "topicgpt.ExtractTopWords module": [[2, "module-topicgpt.ExtractTopWords"]], "topicgpt.GetEmbeddingsOpenAI module": [[2, "module-topicgpt.GetEmbeddingsOpenAI"]], "topicgpt.TopicGPT module": [[2, "module-topicgpt.TopicGPT"]], "topicgpt.TopicPrompting module": [[2, "module-topicgpt.TopicPrompting"]], "topicgpt.TopicRepresentation module": [[2, "module-topicgpt.TopicRepresentation"]], "topicgpt.TopwordEnhancement module": [[2, "module-topicgpt.TopwordEnhancement"]], "Module contents": [[2, "module-topicgpt"]]}, "indexentries": {"clustering_and_dimred (class in topicgpt.clustering)": [[2, "topicgpt.Clustering.Clustering_and_DimRed"]], "extracttopwords (class in topicgpt.extracttopwords)": [[2, "topicgpt.ExtractTopWords.ExtractTopWords"]], "getembeddingsopenai (class in topicgpt.getembeddingsopenai)": [[2, "topicgpt.GetEmbeddingsOpenAI.GetEmbeddingsOpenAI"]], "topic (class in topicgpt.topicrepresentation)": [[2, "topicgpt.TopicRepresentation.Topic"]], "topicgpt (class in topicgpt.topicgpt)": [[2, "topicgpt.TopicGPT.TopicGPT"]], "topicprompting (class in topicgpt.topicprompting)": [[2, "topicgpt.TopicPrompting.TopicPrompting"]], "topwordenhancement (class in topicgpt.topwordenhancement)": [[2, "topicgpt.TopwordEnhancement.TopwordEnhancement"]], "add_new_topic_keyword() (topicgpt.topicprompting.topicprompting method)": [[2, "topicgpt.TopicPrompting.TopicPrompting.add_new_topic_keyword"]], "cluster_and_reduce() (topicgpt.clustering.clustering_and_dimred method)": [[2, "topicgpt.Clustering.Clustering_and_DimRed.cluster_and_reduce"]], "cluster_hdbscan() (topicgpt.clustering.clustering_and_dimred method)": [[2, "topicgpt.Clustering.Clustering_and_DimRed.cluster_hdbscan"]], "combine_topics() (topicgpt.topicprompting.topicprompting method)": [[2, "topicgpt.TopicPrompting.TopicPrompting.combine_topics"]], "compute_bow_representation() (topicgpt.extracttopwords.extracttopwords method)": [[2, "topicgpt.ExtractTopWords.ExtractTopWords.compute_bow_representation"]], "compute_centroid_similarity() (topicgpt.extracttopwords.extracttopwords method)": [[2, "topicgpt.ExtractTopWords.ExtractTopWords.compute_centroid_similarity"]], "compute_corpus_vocab() (topicgpt.extracttopwords.extracttopwords method)": [[2, "topicgpt.ExtractTopWords.ExtractTopWords.compute_corpus_vocab"]], "compute_embedding_similarity_centroids() (topicgpt.extracttopwords.extracttopwords method)": [[2, "topicgpt.ExtractTopWords.ExtractTopWords.compute_embedding_similarity_centroids"]], "compute_embeddings() (topicgpt.topicgpt.topicgpt method)": [[2, "topicgpt.TopicGPT.TopicGPT.compute_embeddings"]], "compute_number_of_tokens() (topicgpt.getembeddingsopenai.getembeddingsopenai method)": [[2, "topicgpt.GetEmbeddingsOpenAI.GetEmbeddingsOpenAI.compute_number_of_tokens"]], "compute_word_topic_mat() (topicgpt.extracttopwords.extracttopwords method)": [[2, "topicgpt.ExtractTopWords.ExtractTopWords.compute_word_topic_mat"]], "compute_word_topic_mat_old() (topicgpt.extracttopwords.extracttopwords method)": [[2, "topicgpt.ExtractTopWords.ExtractTopWords.compute_word_topic_mat_old"]], "compute_words_topics() (topicgpt.extracttopwords.extracttopwords method)": [[2, "topicgpt.ExtractTopWords.ExtractTopWords.compute_words_topics"]], "convert_api_res_list() (topicgpt.getembeddingsopenai.getembeddingsopenai method)": [[2, "topicgpt.GetEmbeddingsOpenAI.GetEmbeddingsOpenAI.convert_api_res_list"]], "count_tokens_api_message() (topicgpt.topwordenhancement.topwordenhancement method)": [[2, "topicgpt.TopwordEnhancement.TopwordEnhancement.count_tokens_api_message"]], "delete_topic() (topicgpt.topicprompting.topicprompting method)": [[2, "topicgpt.TopicPrompting.TopicPrompting.delete_topic"]], "describe_and_name_topics() (in module topicgpt.topicrepresentation)": [[2, "topicgpt.TopicRepresentation.describe_and_name_topics"]], "describe_topic_document_sampling_str() (topicgpt.topwordenhancement.topwordenhancement method)": [[2, "topicgpt.TopwordEnhancement.TopwordEnhancement.describe_topic_document_sampling_str"]], "describe_topic_documents_completion_object() (topicgpt.topwordenhancement.topwordenhancement method)": [[2, "topicgpt.TopwordEnhancement.TopwordEnhancement.describe_topic_documents_completion_object"]], "describe_topic_documents_sampling_completion_object() (topicgpt.topwordenhancement.topwordenhancement method)": [[2, "topicgpt.TopwordEnhancement.TopwordEnhancement.describe_topic_documents_sampling_completion_object"]], "describe_topic_topwords_completion_object() (topicgpt.topwordenhancement.topwordenhancement method)": [[2, "topicgpt.TopwordEnhancement.TopwordEnhancement.describe_topic_topwords_completion_object"]], "describe_topic_topwords_str() (topicgpt.topwordenhancement.topwordenhancement method)": [[2, "topicgpt.TopwordEnhancement.TopwordEnhancement.describe_topic_topwords_str"]], "describe_topics() (topicgpt.topicgpt.topicgpt method)": [[2, "topicgpt.TopicGPT.TopicGPT.describe_topics"]], "embed_vocab_openai() (topicgpt.extracttopwords.extracttopwords method)": [[2, "topicgpt.ExtractTopWords.ExtractTopWords.embed_vocab_openAI"]], "extract_and_describe_topic_cos_sim() (in module topicgpt.topicrepresentation)": [[2, "topicgpt.TopicRepresentation.extract_and_describe_topic_cos_sim"]], "extract_and_describe_topics() (in module topicgpt.topicrepresentation)": [[2, "topicgpt.TopicRepresentation.extract_and_describe_topics"]], "extract_centroid() (topicgpt.extracttopwords.extracttopwords method)": [[2, "topicgpt.ExtractTopWords.ExtractTopWords.extract_centroid"]], "extract_centroids() (topicgpt.extracttopwords.extracttopwords method)": [[2, "topicgpt.ExtractTopWords.ExtractTopWords.extract_centroids"]], "extract_describe_topics_labels_vocab() (in module topicgpt.topicrepresentation)": [[2, "topicgpt.TopicRepresentation.extract_describe_topics_labels_vocab"]], "extract_topic_cos_sim() (in module topicgpt.topicrepresentation)": [[2, "topicgpt.TopicRepresentation.extract_topic_cos_sim"]], "extract_topics() (in module topicgpt.topicrepresentation)": [[2, "topicgpt.TopicRepresentation.extract_topics"]], "extract_topics() (topicgpt.topicgpt.topicgpt method)": [[2, "topicgpt.TopicGPT.TopicGPT.extract_topics"]], "extract_topics_labels_vocab() (in module topicgpt.topicrepresentation)": [[2, "topicgpt.TopicRepresentation.extract_topics_labels_vocab"]], "extract_topics_no_new_vocab_computation() (in module topicgpt.topicrepresentation)": [[2, "topicgpt.TopicRepresentation.extract_topics_no_new_vocab_computation"]], "extract_topwords_centroid_similarity() (topicgpt.extracttopwords.extracttopwords method)": [[2, "topicgpt.ExtractTopWords.ExtractTopWords.extract_topwords_centroid_similarity"]], "extract_topwords_tfidf() (topicgpt.extracttopwords.extracttopwords method)": [[2, "topicgpt.ExtractTopWords.ExtractTopWords.extract_topwords_tfidf"]], "fit() (topicgpt.topicgpt.topicgpt method)": [[2, "topicgpt.TopicGPT.TopicGPT.fit"]], "general_prompt() (topicgpt.topicprompting.topicprompting method)": [[2, "topicgpt.TopicPrompting.TopicPrompting.general_prompt"]], "generate_topic_name_str() (topicgpt.topwordenhancement.topwordenhancement method)": [[2, "topicgpt.TopwordEnhancement.TopwordEnhancement.generate_topic_name_str"]], "get_embeddings() (topicgpt.getembeddingsopenai.getembeddingsopenai method)": [[2, "topicgpt.GetEmbeddingsOpenAI.GetEmbeddingsOpenAI.get_embeddings"]], "get_embeddings_doc_split() (topicgpt.getembeddingsopenai.getembeddingsopenai method)": [[2, "topicgpt.GetEmbeddingsOpenAI.GetEmbeddingsOpenAI.get_embeddings_doc_split"]], "get_most_similar_docs() (topicgpt.extracttopwords.extracttopwords method)": [[2, "topicgpt.ExtractTopWords.ExtractTopWords.get_most_similar_docs"]], "get_topic_information() (topicgpt.topicprompting.topicprompting method)": [[2, "topicgpt.TopicPrompting.TopicPrompting.get_topic_information"]], "get_topic_lis() (topicgpt.topicprompting.topicprompting method)": [[2, "topicgpt.TopicPrompting.TopicPrompting.get_topic_lis"]], "identify_topic_idx() (topicgpt.topicprompting.topicprompting method)": [[2, "topicgpt.TopicPrompting.TopicPrompting.identify_topic_idx"]], "knn_search() (topicgpt.topicprompting.topicprompting method)": [[2, "topicgpt.TopicPrompting.TopicPrompting.knn_search"]], "make_api_call() (topicgpt.getembeddingsopenai.getembeddingsopenai method)": [[2, "topicgpt.GetEmbeddingsOpenAI.GetEmbeddingsOpenAI.make_api_call"]], "module": [[2, "module-topicgpt"], [2, "module-topicgpt.Clustering"], [2, "module-topicgpt.ExtractTopWords"], [2, "module-topicgpt.GetEmbeddingsOpenAI"], [2, "module-topicgpt.TopicGPT"], [2, "module-topicgpt.TopicPrompting"], [2, "module-topicgpt.TopicRepresentation"], [2, "module-topicgpt.TopwordEnhancement"]], "num_tokens_from_string() (topicgpt.getembeddingsopenai.getembeddingsopenai static method)": [[2, "topicgpt.GetEmbeddingsOpenAI.GetEmbeddingsOpenAI.num_tokens_from_string"]], "pprompt() (topicgpt.topicgpt.topicgpt method)": [[2, "topicgpt.TopicGPT.TopicGPT.pprompt"]], "print_topics() (topicgpt.topicgpt.topicgpt method)": [[2, "topicgpt.TopicGPT.TopicGPT.print_topics"]], "prompt() (topicgpt.topicgpt.topicgpt method)": [[2, "topicgpt.TopicGPT.TopicGPT.prompt"]], "prompt_knn_search() (topicgpt.topicprompting.topicprompting method)": [[2, "topicgpt.TopicPrompting.TopicPrompting.prompt_knn_search"]], "reduce_dimensions_umap() (topicgpt.clustering.clustering_and_dimred method)": [[2, "topicgpt.Clustering.Clustering_and_DimRed.reduce_dimensions_umap"]], "reindex_topic_lis() (topicgpt.topicprompting.topicprompting method)": [[2, "topicgpt.TopicPrompting.TopicPrompting.reindex_topic_lis"]], "reindex_topics() (topicgpt.topicprompting.topicprompting method)": [[2, "topicgpt.TopicPrompting.TopicPrompting.reindex_topics"]], "repr_topics() (topicgpt.topicgpt.topicgpt method)": [[2, "topicgpt.TopicGPT.TopicGPT.repr_topics"]], "sample_identity() (topicgpt.topwordenhancement.topwordenhancement static method)": [[2, "topicgpt.TopwordEnhancement.TopwordEnhancement.sample_identity"]], "sample_poisson() (topicgpt.topwordenhancement.topwordenhancement static method)": [[2, "topicgpt.TopwordEnhancement.TopwordEnhancement.sample_poisson"]], "sample_uniform() (topicgpt.topwordenhancement.topwordenhancement static method)": [[2, "topicgpt.TopwordEnhancement.TopwordEnhancement.sample_uniform"]], "save_embeddings() (topicgpt.topicgpt.topicgpt method)": [[2, "topicgpt.TopicGPT.TopicGPT.save_embeddings"]], "set_topic_description() (topicgpt.topicrepresentation.topic method)": [[2, "topicgpt.TopicRepresentation.Topic.set_topic_description"]], "set_topic_lis() (topicgpt.topicprompting.topicprompting method)": [[2, "topicgpt.TopicPrompting.TopicPrompting.set_topic_lis"]], "set_topic_name() (topicgpt.topicrepresentation.topic method)": [[2, "topicgpt.TopicRepresentation.Topic.set_topic_name"]], "show_topic_lis() (topicgpt.topicprompting.topicprompting method)": [[2, "topicgpt.TopicPrompting.TopicPrompting.show_topic_lis"]], "split_doc() (topicgpt.getembeddingsopenai.getembeddingsopenai method)": [[2, "topicgpt.GetEmbeddingsOpenAI.GetEmbeddingsOpenAI.split_doc"]], "split_long_docs() (topicgpt.getembeddingsopenai.getembeddingsopenai method)": [[2, "topicgpt.GetEmbeddingsOpenAI.GetEmbeddingsOpenAI.split_long_docs"]], "split_topic_hdbscan() (topicgpt.topicprompting.topicprompting method)": [[2, "topicgpt.TopicPrompting.TopicPrompting.split_topic_hdbscan"]], "split_topic_keywords() (topicgpt.topicprompting.topicprompting method)": [[2, "topicgpt.TopicPrompting.TopicPrompting.split_topic_keywords"]], "split_topic_kmeans() (topicgpt.topicprompting.topicprompting method)": [[2, "topicgpt.TopicPrompting.TopicPrompting.split_topic_kmeans"]], "split_topic_new_assignments() (topicgpt.topicprompting.topicprompting method)": [[2, "topicgpt.TopicPrompting.TopicPrompting.split_topic_new_assignments"]], "split_topic_single_keyword() (topicgpt.topicprompting.topicprompting method)": [[2, "topicgpt.TopicPrompting.TopicPrompting.split_topic_single_keyword"]], "to_dict() (topicgpt.topicrepresentation.topic method)": [[2, "topicgpt.TopicRepresentation.Topic.to_dict"]], "to_json() (topicgpt.topicrepresentation.topic method)": [[2, "topicgpt.TopicRepresentation.Topic.to_json"]], "topic_lis_to_json() (in module topicgpt.topicrepresentation)": [[2, "topicgpt.TopicRepresentation.topic_lis_to_json"]], "topic_to_json() (in module topicgpt.topicrepresentation)": [[2, "topicgpt.TopicRepresentation.topic_to_json"]], "topicgpt": [[2, "module-topicgpt"]], "topicgpt.clustering": [[2, "module-topicgpt.Clustering"]], "topicgpt.extracttopwords": [[2, "module-topicgpt.ExtractTopWords"]], "topicgpt.getembeddingsopenai": [[2, "module-topicgpt.GetEmbeddingsOpenAI"]], "topicgpt.topicgpt": [[2, "module-topicgpt.TopicGPT"]], "topicgpt.topicprompting": [[2, "module-topicgpt.TopicPrompting"]], "topicgpt.topicrepresentation": [[2, "module-topicgpt.TopicRepresentation"]], "topicgpt.topwordenhancement": [[2, "module-topicgpt.TopwordEnhancement"]], "umap_diagnostics() (topicgpt.clustering.clustering_and_dimred method)": [[2, "topicgpt.Clustering.Clustering_and_DimRed.umap_diagnostics"]], "visualize_clusters() (topicgpt.topicgpt.topicgpt method)": [[2, "topicgpt.TopicGPT.TopicGPT.visualize_clusters"]], "visualize_clusters_dynamic() (topicgpt.clustering.clustering_and_dimred method)": [[2, "topicgpt.Clustering.Clustering_and_DimRed.visualize_clusters_dynamic"]], "visualize_clusters_static() (topicgpt.clustering.clustering_and_dimred method)": [[2, "topicgpt.Clustering.Clustering_and_DimRed.visualize_clusters_static"]]}})